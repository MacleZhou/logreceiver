<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="de.codesourcery"/>
    <context:annotation-config/>
    <tx:annotation-driven/>

    <!-- Creating TransactionManager Bean, since JDBC we are creating of type DataSourceTransactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource" />
    </bean>

    <bean name="config" class="de.codesourcery.logreceiver.entity.Configuration">
    </bean>

    <bean name="datasource" class="de.codesourcery.logreceiver.util.DataSourceFactory">
        <constructor-arg ref="config" />
    </bean>

    <bean name="hostIdManager" class="de.codesourcery.logreceiver.logstorage.PostgreSQLHostIdManager" lazy-init="false">
        <constructor-arg ref="datasource"/>
        <constructor-arg ref="config"/>
    </bean>

    <bean name="logStorage" class="de.codesourcery.logreceiver.logstorage.DelegatingLogStorage">
        <constructor-arg ref="datasource"/>
        <constructor-arg ref="hostIdManager"/>
        <constructor-arg ref="config"/>
        <constructor-arg ref="filterCallbackManager"/>
    </bean>

    <bean name="logWriter" class="de.codesourcery.logreceiver.logstorage.SQLLogWriter">
        <constructor-arg ref="logStorage"/>
        <constructor-arg ref="hostIdManager"/>
    </bean>

    <!--
    <bean name="parser" class="de.codesourcery.logreceiver.parsing.RFC5424Parser" scope="prototype">
        <constructor-arg ref="hostIdManager"/>
        <constructor-arg ref="logWriter"/>
        <constructor-arg ref="filterCallbackHelper"/>
    </bean>
-->

    <bean name="filterCallbackManager" class="de.codesourcery.logreceiver.filtering.FilterCallbackManager" >
        <constructor-arg ref="hostIdManager"/>
        <constructor-arg ref="messageDAO"/>
    </bean>

    <bean name="logParserFactory" class="de.codesourcery.logreceiver.parsing.LogParserFactory">
        <constructor-arg ref="hostIdManager"/>
        <constructor-arg ref="logWriter"/>
    </bean>

    <bean name="udpServer" class="de.codesourcery.logreceiver.receiving.UDPServer" lazy-init="false">
        <constructor-arg ref="config"/>
        <constructor-arg ref="logParserFactory"/>
    </bean>

    <bean name="messageDAO" class="de.codesourcery.logreceiver.logstorage.MessageDAO">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>

    <bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <bean name="api" class="de.codesourcery.logreceiver.APIImpl" lazy-init="false">
        <constructor-arg index="0" ref="hostIdManager"/>
        <constructor-arg index="1" ref="messageDAO"/>
        <constructor-arg index="2" ref="filterCallbackManager"/>
    </bean>

    <bean name="authenticator" class="de.codesourcery.logreceiver.ui.auth.SimpleAuthenticator">

    </bean>

</beans>